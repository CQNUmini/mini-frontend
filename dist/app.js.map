{"version":3,"file":"app.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AALA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;AAWA;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAHA;AAKA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA","sources":["webpack://frontend/._src_app.ts","webpack://frontend/./src/app.ts?7071","webpack://frontend/._src_common_launchUtilities_launchInitiater.ts"],"sourcesContent":["import { PropsWithChildren, useEffect } from 'react'\nimport { useLaunch } from '@tarojs/taro'\nimport Taro from '@tarojs/taro'\nimport PubSub from 'pubsub-js';\n\nimport useStore from './store/store'\nimport useUser from './store/userInfo'\nimport usePostData from './store/postData'\nimport useRequest from './store/request'\n\n// launch Utilities\nimport LaunchInitiater from './common/launchUtilities/launchInitiater'\n\n// styles\nimport './app.less'\n\nfunction App({ children }: PropsWithChildren<any>) {\n  // 数据 store ————————————————————————————————————————————————————————————\n  const [statusBarHeight, setStatusBarHeight] = useStore((state) => [state.statusBarHeight, state.setStatusBarHeight])\n  const [postData, setPostData] = usePostData((state) => [state, state.setPostData])\n  const [requestUrl, setRequestUrl] = useRequest((state) => [state.requestUrl, state.setRequestUrl])\n\n  const [userInfo, setUserInfo] = useUser((state) => [state, state.setUserInfo])\n\n  // 请求初始数据————————————————————————————————————————————————————————————\n\n  useLaunch(async () => {\n    // 获取全局 statusBarHeight        \n    const systemInfoRes = await Taro.getSystemInfo();\n    if (systemInfoRes.statusBarHeight) {\n      setStatusBarHeight(systemInfoRes.statusBarHeight - 10)\n    };\n  })\n\n  // 数据初始化：App 进入、登录、注册时\n  useEffect(() => {\n    // launchInitiater\n    let launchInitiater = new LaunchInitiater(requestUrl, userInfo, postData);\n    // 第一次进入 APP ，全部加载一次\n    // 验证登录状态    \n    launchInitiater.initialLoginValidation();\n    // 获取 OSS 的 parameters\n    launchInitiater.getOssParams();\n    // 获取所有Tags\n    launchInitiater.getAllTags();\n\n    // 新用户注册 或 登录，需要重新加载一次，请在登录或注册成功后，发布此消息！！！\n    const getOssParamsToken = PubSub.subscribe('getOssParams', () => {\n      launchInitiater = new LaunchInitiater(requestUrl, userInfo, postData); // 传新数据\n      \n      launchInitiater.getOssParams();\n    });\n\n    return () => {\n      PubSub.unsubscribe(getOssParamsToken);\n    }\n  }, [])\n\n  // children 是将要会渲染的页面\n  return children\n}\n\nexport default App","import '@tarojs/plugin-platform-weapp/dist/runtime'\nimport '@tarojs/plugin-html/dist/runtime'\n\nimport { window } from '@tarojs/runtime'\nimport { createReactApp } from '@tarojs/plugin-framework-react/dist/runtime'\nimport { initPxTransform } from '@tarojs/taro'\nimport '@tarojs/plugin-http/dist/runtime'\n\nimport component from \"../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./app.ts\"\n\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nvar config = {\"pages\":[\"pages/index/index\",\"pages/study/study\",\"pages/classtable/classtable\",\"pages/mine/mine\",\"pages/mine/contactUs/contactUs\",\"pages/service/service\",\"pages/service/classroomNav/classroomNav\",\"pages/posts/createpost/createpost\",\"pages/posts/postpage/postpage\",\"pages/search/search\",\"pages/search/searchResult/searchResult\",\"pages/login/login\",\"pages/register/register\"],\"window\":{\"backgroundTextStyle\":\"light\",\"navigationBarTextStyle\":\"black\",\"navigationStyle\":\"custom\"},\"tabBar\":{\"color\":\"#1e1e1e\",\"selectedColor\":\"#3236d7\",\"backgroundColor\":\"#fff\",\"borderStyle\":\"white\",\"list\":[{\"pagePath\":\"pages/index/index\",\"text\":\"首页\",\"iconPath\":\"./static/tabBar/home-icon.png\",\"selectedIconPath\":\"./static/tabBar/home-selectedIcon.png\"},{\"pagePath\":\"pages/study/study\",\"text\":\"学习\",\"iconPath\":\"./static/tabBar/study-icon.png\",\"selectedIconPath\":\"./static/tabBar/study-selectedIcon.png\"},{\"pagePath\":\"pages/service/service\",\"text\":\"服务\",\"iconPath\":\"./static/tabBar/service-icon.png\",\"selectedIconPath\":\"./static/tabBar/service-selectedIcon.png\"},{\"pagePath\":\"pages/mine/mine\",\"text\":\"我的\",\"iconPath\":\"./static/tabBar/mine-icon.png\",\"selectedIconPath\":\"./static/tabBar/mine-selectedIcon.png\"}]}};\nwindow.__taroAppConfig = config\nvar inst = App(createReactApp(component, React, ReactDOM, config))\n\ninitPxTransform({\n  designWidth: 750,\n  deviceRatio: {\"375\":2,\"640\":1.17,\"750\":1,\"828\":0.905},\n  baseFontSize: 20,\n  unitPrecision: undefined,\n  targetUnit: undefined\n})\n","import Taro from \"@tarojs/taro\";\n\nclass LaunchInitiater {\n    requestUrl: string;\n    userInfo: any;\n    postData: any;\n\n    constructor(requestUrl: string, userInfo: any, postData: any) {\n        this.requestUrl = requestUrl;\n        this.userInfo = userInfo;\n        this.postData = postData;\n    }\n\n    // static properties\n    token = Taro.getStorageSync('token');\n\n    async initialLoginValidation() {\n\n        const loginValidateRes = await Taro.request({\n            method: 'POST',\n            url: this.requestUrl + '/v1/users/checkLoginStatus',\n            header: {\n                Authorization: this.token,\n            },\n            data: {\n                action: 'initialLoginValidation'\n            }\n        });\n\n        console.log(loginValidateRes);\n\n\n        // 验证成功， 从本地缓存中读取信息 / 失败则不会读取， isLogin 为 false\n        if (loginValidateRes.statusCode.toString().startsWith('2')) {\n            // 创建 userInfo 的浅拷贝，防止方法被覆写\n            const userInfoArray = Object.keys(this.userInfo).filter(key => typeof this.userInfo[key] !== 'function') // 防止方法被覆写\n\n            userInfoArray.forEach((key) => {\n                this.userInfo.setUserInfo({ [key]: Taro.getStorageSync(key) });\n            });\n        }\n    };\n\n    async getOssParams() {\n        // 获取 OSS 的 parameters\n        const ossParamsRes = await Taro.request({\n            method: 'GET',\n            url: `${this.requestUrl}/v1/users/getOssParams`,\n            header: {\n                Authorization: this.token\n            }\n        });\n\n        // 将 OSS params 存入缓存 (OSSAccessKeyId, policy, signature)\n        if (ossParamsRes.statusCode === 200) {\n            Object.keys(ossParamsRes.data.data.params).forEach(key => {\n                Taro.setStorageSync(key, ossParamsRes.data.data.params[key]);\n            });\n        }\n    };\n\n    async getAllTags() {\n        const tags = await Taro.request({\n            method: 'GET',\n            url: this.requestUrl + '/v1/posts/tags',\n        });\n\n        const tagsArray = tags.data.data.tags.map(item => item.name);\n        \n        // 将所有的tags存入 store\n        this.postData.setPostData({ tags: tagsArray })\n    };\n};\n\nexport default LaunchInitiater;"],"names":[],"sourceRoot":""}