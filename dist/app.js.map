{"version":3,"file":"app.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvBA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAgBA;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;AAWA;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1BA;AAAA;AAAA;AA4BA","sources":["webpack://frontend/._src_app.ts","webpack://frontend/./src/app.ts?7071","webpack://frontend/._src_common_launchUtilities_getOssParams.ts","webpack://frontend/._src_common_launchUtilities_initialLoginValidation.ts"],"sourcesContent":["import { PropsWithChildren, useEffect } from 'react'\nimport { useLaunch } from '@tarojs/taro'\nimport Taro from '@tarojs/taro'\n\nimport useStore from './store/store'\nimport useUser from './store/userInfo'\nimport usePostData from './store/postData'\nimport useRequest from './store/request'\n\nimport getOssParams from './common/launchUtilities/getOssParams'\nimport initialLoginValidation from './common/launchUtilities/initialLoginValidation'\n\nimport './app.less'\n\nfunction App({ children }: PropsWithChildren<any>) {\n  // 数据 store ————————————————————————————————————————————————————————————\n  const [statusBarHeight, setStatusBarHeight] = useStore((state) => [state.statusBarHeight, state.setStatusBarHeight])\n  const [postData, setPostData] = usePostData((state) => [state, state.setPostData])\n  const [requestUrl, setRequestUrl] = useRequest((state) => [state.requestUrl, state.setRequestUrl])\n\n  const [userInfo, setUserInfo] = useUser((state) => [state, state.setUserInfo])\n\n  useLaunch(async () => {\n    // 获取全局 statusBarHeight        \n    Taro.getSystemInfo({\n      success: res => {\n        if (res.statusBarHeight) {\n          setStatusBarHeight(res.statusBarHeight - 10)\n        }\n      }\n    })\n    Taro.setNavigationBarColor({\n      frontColor: '#000000',\n      backgroundColor: '#1e1e1e'\n    })\n\n    // 请求初始数据————————————————————————————————————————————————————————————\n\n    // 验证登录状态    \n    initialLoginValidation(requestUrl, userInfo); // 验证登录状态，数据存入缓存\n\n    // 获取 OSS 的 parameters\n    getOssParams(requestUrl); // 获取 OSS Params，数据存入缓存\n\n\n    // 获取所有Tags \n    // Taro.request({\n    //   method: 'GET',\n    //   url: requestUrl + '/posts/gettags',\n    //   success(res) {\n    //     setPostData({ tags: res.data.data.tags })\n    //   }\n    // })\n  })\n\n  // children 是将要会渲染的页面\n  return children\n}\n\nexport default App","import '@tarojs/plugin-platform-weapp/dist/runtime'\nimport '@tarojs/plugin-html/dist/runtime'\n\nimport { window } from '@tarojs/runtime'\nimport { createReactApp } from '@tarojs/plugin-framework-react/dist/runtime'\nimport { initPxTransform } from '@tarojs/taro'\nimport '@tarojs/plugin-http/dist/runtime'\n\nimport component from \"../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./app.ts\"\n\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nvar config = {\"pages\":[\"pages/index/index\",\"pages/study/study\",\"pages/classtable/classtable\",\"pages/mine/mine\",\"pages/service/service\",\"pages/service/classroomNav/classroomNav\",\"pages/posts/createpost/createpost\",\"pages/posts/postpage/postpage\",\"pages/search/search\",\"pages/search/searchResult/searchResult\",\"pages/login/login\",\"pages/register/register\"],\"window\":{\"backgroundTextStyle\":\"light\",\"navigationBarTextStyle\":\"black\",\"navigationStyle\":\"custom\"},\"tabBar\":{\"color\":\"#1e1e1e\",\"selectedColor\":\"#3236d7\",\"backgroundColor\":\"#fff\",\"borderStyle\":\"white\",\"list\":[{\"pagePath\":\"pages/index/index\",\"text\":\"首页\",\"iconPath\":\"./static/tabBar/home-icon.png\",\"selectedIconPath\":\"./static/tabBar/home-selectedIcon.png\"},{\"pagePath\":\"pages/study/study\",\"text\":\"学习\",\"iconPath\":\"./static/tabBar/study-icon.png\",\"selectedIconPath\":\"./static/tabBar/study-selectedIcon.png\"},{\"pagePath\":\"pages/service/service\",\"text\":\"服务\",\"iconPath\":\"./static/tabBar/service-icon.png\",\"selectedIconPath\":\"./static/tabBar/service-selectedIcon.png\"},{\"pagePath\":\"pages/mine/mine\",\"text\":\"我的\",\"iconPath\":\"./static/tabBar/mine-icon.png\",\"selectedIconPath\":\"./static/tabBar/mine-selectedIcon.png\"}]}};\nwindow.__taroAppConfig = config\nvar inst = App(createReactApp(component, React, ReactDOM, config))\n\ninitPxTransform({\n  designWidth: 750,\n  deviceRatio: {\"375\":2,\"640\":1.17,\"750\":1,\"828\":0.905},\n  baseFontSize: 20,\n  unitPrecision: undefined,\n  targetUnit: undefined\n})\n","import Taro from \"@tarojs/taro\";\n\nconst token = Taro.getStorageSync('token');\n\nconst getOssParams = async (requestUrl: string) => {\n    // 获取 OSS 的 parameters\n    const ossParamsRes = await Taro.request({\n      method: 'GET',\n      url: `${requestUrl}/v1/users/getOssParams`,\n      header: {\n        Authorization: token\n      }\n    });\n\n    // 将 OSS params 存入缓存\n    Object.keys(ossParamsRes.data.data.params).forEach(key => {\n      Taro.setStorageSync(key, ossParamsRes.data.data.params[key]);\n    });\n};\n\nexport default getOssParams;","import Taro from \"@tarojs/taro\";\n\nconst initialLoginValidation = async (requestUrl: string, userInfo) => {\n    const token = Taro.getStorageSync('token');\n\n    const loginValidateRes = await Taro.request({\n      method: 'POST',\n      url: requestUrl + '/v1/users/checkLoginStatus',\n      header: {\n        Authorization: token,\n      },\n      data: {\n        action: 'initialLoginValidation'\n      }\n    });\n\n    console.log(loginValidateRes);\n    \n\n    // 验证成功， 从本地缓存中读取信息 / 失败则不会读取， isLogin 为 false\n    if (loginValidateRes.statusCode.toString().startsWith('2')) {\n      // 创建 userInfo 的浅拷贝，防止方法被覆写\n      const userInfoArray = Object.keys(userInfo).filter(key => typeof userInfo[key] !== 'function' ) // 防止方法被覆写\n      \n      userInfoArray.forEach((key) => {\n        userInfo.setUserInfo({ [key]: Taro.getStorageSync(key) });\n      });\n    }\n};\n\nexport default initialLoginValidation;"],"names":[],"sourceRoot":""}