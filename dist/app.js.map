{"version":3,"file":"app.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAHA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;ACZA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAgBA;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;AAWA;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1BA;AAAA;AAAA;AA4BA","sources":["webpack://frontend/._src_app.ts","webpack://frontend/./src/app.ts?7071","webpack://frontend/._src_common_launchUtilities_getAllTags.ts","webpack://frontend/._src_common_launchUtilities_getOssParams.ts","webpack://frontend/._src_common_launchUtilities_initialLoginValidation.ts"],"sourcesContent":["import { PropsWithChildren, useEffect } from 'react'\r\nimport { useLaunch } from '@tarojs/taro'\r\nimport Taro from '@tarojs/taro'\r\n\r\nimport useStore from './store/store'\r\nimport useUser from './store/userInfo'\r\nimport usePostData from './store/postData'\r\nimport useRequest from './store/request'\r\n\r\n// launch Utilities\r\nimport getOssParams from './common/launchUtilities/getOssParams'\r\nimport initialLoginValidation from './common/launchUtilities/initialLoginValidation'\r\nimport getAllTags from './common/launchUtilities/getAllTags'\r\n\r\nimport './app.less'\r\n\r\nfunction App({ children }: PropsWithChildren<any>) {\r\n// 数据 store ————————————————————————————————————————————————————————————\r\n  const [statusBarHeight, setStatusBarHeight] = useStore((state) => [state.statusBarHeight, state.setStatusBarHeight])\r\n  const [postData, setPostData] = usePostData((state) => [state, state.setPostData])\r\n  const [requestUrl, setRequestUrl] = useRequest((state) => [state.requestUrl, state.setRequestUrl])\r\n\r\n  const [userInfo, setUserInfo] = useUser((state) => [state, state.setUserInfo])\r\n\r\n// 请求初始数据————————————————————————————————————————————————————————————\r\n\r\n  useLaunch(async () => {\r\n    // 获取全局 statusBarHeight        \r\n    Taro.getSystemInfo({\r\n      success: res => {\r\n        if (res.statusBarHeight) {\r\n          setStatusBarHeight(res.statusBarHeight - 10)\r\n        }\r\n      }\r\n    })\r\n    Taro.setNavigationBarColor({\r\n      frontColor: '#000000',\r\n      backgroundColor: '#1e1e1e'\r\n    })\r\n\r\n    // 验证登录状态    \r\n    initialLoginValidation(requestUrl, userInfo); // 验证登录状态，数据存入缓存\r\n\r\n    // 获取 OSS 的 parameters\r\n    getOssParams(requestUrl); // 获取 OSS Params，数据存入缓存\r\n\r\n\r\n    // 获取所有Tags \r\n    getAllTags(requestUrl, setPostData); // 获取所有的Tags，数据存入 store\r\n  })\r\n\r\n  // children 是将要会渲染的页面\r\n  return children\r\n}\r\n\r\nexport default App","import '@tarojs/plugin-platform-weapp/dist/runtime'\nimport '@tarojs/plugin-html/dist/runtime'\n\nimport { window } from '@tarojs/runtime'\nimport { createReactApp } from '@tarojs/plugin-framework-react/dist/runtime'\nimport { initPxTransform } from '@tarojs/taro'\nimport '@tarojs/plugin-http/dist/runtime'\n\nimport component from \"../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./app.ts\"\n\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nvar config = {\"pages\":[\"pages/index/index\",\"pages/study/study\",\"pages/classtable/classtable\",\"pages/mine/mine\",\"pages/mine/contactUs/contactUs\",\"pages/service/service\",\"pages/service/classroomNav/classroomNav\",\"pages/posts/createpost/createpost\",\"pages/posts/postpage/postpage\",\"pages/search/search\",\"pages/search/searchResult/searchResult\",\"pages/login/login\",\"pages/register/register\"],\"window\":{\"backgroundTextStyle\":\"light\",\"navigationBarTextStyle\":\"black\",\"navigationStyle\":\"custom\"},\"tabBar\":{\"color\":\"#1e1e1e\",\"selectedColor\":\"#3236d7\",\"backgroundColor\":\"#fff\",\"borderStyle\":\"white\",\"list\":[{\"pagePath\":\"pages/index/index\",\"text\":\"首页\",\"iconPath\":\"./static/tabBar/home-icon.png\",\"selectedIconPath\":\"./static/tabBar/home-selectedIcon.png\"},{\"pagePath\":\"pages/study/study\",\"text\":\"学习\",\"iconPath\":\"./static/tabBar/study-icon.png\",\"selectedIconPath\":\"./static/tabBar/study-selectedIcon.png\"},{\"pagePath\":\"pages/service/service\",\"text\":\"服务\",\"iconPath\":\"./static/tabBar/service-icon.png\",\"selectedIconPath\":\"./static/tabBar/service-selectedIcon.png\"},{\"pagePath\":\"pages/mine/mine\",\"text\":\"我的\",\"iconPath\":\"./static/tabBar/mine-icon.png\",\"selectedIconPath\":\"./static/tabBar/mine-selectedIcon.png\"}]}};\nwindow.__taroAppConfig = config\nvar inst = App(createReactApp(component, React, ReactDOM, config))\n\ninitPxTransform({\n  designWidth: 750,\n  deviceRatio: {\"375\":2,\"640\":1.17,\"750\":1,\"828\":0.905},\n  baseFontSize: 20,\n  unitPrecision: undefined,\n  targetUnit: undefined\n})\n","import Taro from \"@tarojs/taro\";\r\n\r\nconst getAllTags = async (requestUrl: string, setPostData) => {\r\n    const tags = await Taro.request({\r\n        method: 'GET',\r\n        url: requestUrl + '/v1/posts/tags',\r\n      })\r\n      const tagsArray = tags.data.data.tags.map( item => item.name ); \r\n      // 将所有的tags存入 store\r\n      setPostData({ tags: tagsArray })\r\n};\r\n\r\nexport default getAllTags;","import Taro from \"@tarojs/taro\";\r\n\r\nconst token = Taro.getStorageSync('token');\r\n\r\nconst getOssParams = async (requestUrl: string) => {\r\n    // 获取 OSS 的 parameters\r\n    const ossParamsRes = await Taro.request({\r\n      method: 'GET',\r\n      url: `${requestUrl}/v1/users/getOssParams`,\r\n      header: {\r\n        Authorization: token\r\n      }\r\n    });\r\n\r\n    // 将 OSS params 存入缓存 (OSSAccessKeyId, policy, signature)\r\n    Object.keys(ossParamsRes.data.data.params).forEach(key => {\r\n      Taro.setStorageSync(key, ossParamsRes.data.data.params[key]);\r\n    });\r\n};\r\n\r\nexport default getOssParams;","import Taro from \"@tarojs/taro\";\r\n\r\nconst initialLoginValidation = async (requestUrl: string, userInfo) => {\r\n    const token = Taro.getStorageSync('token');\r\n\r\n    const loginValidateRes = await Taro.request({\r\n      method: 'POST',\r\n      url: requestUrl + '/v1/users/checkLoginStatus',\r\n      header: {\r\n        Authorization: token,\r\n      },\r\n      data: {\r\n        action: 'initialLoginValidation'\r\n      }\r\n    });\r\n\r\n    console.log(loginValidateRes);\r\n    \r\n\r\n    // 验证成功， 从本地缓存中读取信息 / 失败则不会读取， isLogin 为 false\r\n    if (loginValidateRes.statusCode.toString().startsWith('2')) {\r\n      // 创建 userInfo 的浅拷贝，防止方法被覆写\r\n      const userInfoArray = Object.keys(userInfo).filter(key => typeof userInfo[key] !== 'function' ) // 防止方法被覆写\r\n      \r\n      userInfoArray.forEach((key) => {\r\n        userInfo.setUserInfo({ [key]: Taro.getStorageSync(key) });\r\n      });\r\n    }\r\n};\r\n\r\nexport default initialLoginValidation;"],"names":[],"sourceRoot":""}