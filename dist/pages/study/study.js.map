{"version":3,"file":"pages/study/study.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAeA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AAEA;AAFA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;ACzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://frontend/._src_pages_study_study.tsx","webpack://frontend/./src/pages/study/study.tsx?eb3c"],"sourcesContent":["import { View, Text, Image } from '@tarojs/components'\nimport { useState, useEffect } from 'react'\nimport Taro from '@tarojs/taro'\n\nimport useStore from '@/store/store'\nimport useCLasstable from '@/store/classTable'\nimport useUser from '@/store/userInfo'\n\nimport './study.css'\n\nimport bookCover from '../../static/reading/cover.png'\n\ninterface LessonType {\n  lesson_id: number\n  name: string, // 课程名称\n  place: string, // 上课地点\n  teacher: string, // 教师\n  start_time: number, // 在第几节课开始\n  end_time: number, // 在第几节课结束\n  day: number, // 星期几\n  start_week: number, // 从第几周开始\n  end_week: number, // 到第几周结束\n  color: string, // 课程颜色\n}\n\nexport default function Study() {\n\n  const [userInfo, setUserInfo] = useUser((state) => [state, state.setUserInfo]) // 用户信息\n\n  const statusBarHeight = useStore(state => state.statusBarHeight)\n  const classTable = useCLasstable(state => state.classTable)\n  const startDate = useCLasstable(state => state.startDate) // 开学日期\n\n  const [currentWeek, setCurrentWeek] = useState<number>(1) // 当前周数\n\n  // 课程时间对照表: [hour, minute]\n  const [timeTable, setTimeTable] = useState([\n    [8, 30], [9, 25], [10, 30], [11, 25], [14, 30], [15, 25], [16, 30], [17, 25], [19, 30], [20, 25] \n  ])\n\n  const [followingLessons, setFollowingLessons] = useState<LessonType[]>([\n    {lesson_id: 1001, name: '今日无课', place: '',  teacher: '', start_time: 1, end_time: 2, day: 0, start_week: 1, end_week: 16, color: '',},\n    {lesson_id: 1002, name: '今日无课', place: '',  teacher: '', start_time: 3, end_time: 4, day: 0, start_week: 1, end_week: 16, color: '',},\n  ])\n\n  useEffect(() => {\n    const date = new Date();\n    // 计算当前周数\n    const week = Math.ceil((date.getTime() - new Date(startDate).getTime()) / (1000 * 60 * 60 * 24 * 7))\n    setCurrentWeek(week)\n\n    const day = date.getDay(); // 星期几 \n    const hours = date.getHours(); // 几点\n    const minutes = date.getMinutes(); // 几分\n\n    const classTableToday = classTable.filter(item => item.day === day && item.start_week <= currentWeek); // 今日课程  \n    \n    // 获取今日剩余课程\n    if (hours * 60 + minutes < 20 * 60 + 25) {\n      const nextStartTime = timeTable.find(item => item[0] * 60 + item[1] > hours * 60 + minutes) as number[];\n      const nextStartTimeIndex = timeTable.indexOf(nextStartTime) + 1;\n      const followingLessonsToday = classTableToday.filter(item => item.start_time >= nextStartTimeIndex);\n  \n      // 当只有一节课时\n      if (followingLessonsToday.length === 1) {\n        setFollowingLessons([\n          followingLessonsToday[0],\n          {lesson_id: 1002, name: '今日无课', place: '',  teacher: '', start_time: 3, end_time: 4, day: 0, start_week: 1, end_week: 16, color: '',},\n        ]);\n      } \n      // 当没有课时\n      else if (followingLessonsToday.length === 0) {\n        setFollowingLessons([\n          {lesson_id: 1001, name: '今日无课', place: '',  teacher: '', start_time: 1, end_time: 2, day: 0, start_week: 1, end_week: 16, color: '',},\n          {lesson_id: 1002, name: '今日无课', place: '',  teacher: '', start_time: 3, end_time: 4, day: 0, start_week: 1, end_week: 16, color: '',},\n        ]);\n      } else {\n        setFollowingLessons(followingLessonsToday);\n      }\n    } else {\n      setFollowingLessons([\n        {lesson_id: 1001, name: '今日无课', place: '',  teacher: '', start_time: 1, end_time: 2, day: 0, start_week: 1, end_week: 16, color: '',},\n        {lesson_id: 1002, name: '今日无课', place: '',  teacher: '', start_time: 3, end_time: 4, day: 0, start_week: 1, end_week: 16, color: '',},\n      ]);\n    }\n  \n  }, [classTable, timeTable, currentWeek]);\n\n\n  return (\n    <View className='study-wrapper' style={{ paddingTop: statusBarHeight + 'px' }}>\n      <View className='study-header'>{userInfo.major}</View>\n      <View className='study-content'>\n        <View className='study-timetable'>\n          <View className='study-timetable-top'>\n            <Text>我的课程</Text>\n            <View className='study-timetable-toTable' onClick={() => Taro.navigateTo({ url: '/pages/classtable/classtable' })}>查看课表></View>\n          </View>\n          <View className='study-timetable-items'>\n            <View className='study-timetable-current'>\n              <View className='study-timetable-left'>\n                <Text></Text>\n                <Text className='study-timetable-name'>{followingLessons[0].name}</Text>\n                <Text>{followingLessons[0].place}</Text>\n              </View>\n              <View className='study-timetable-line'></View>\n              <View className='study-timetable-right'>\n                <Text>{timeTable[followingLessons[0].start_time - 1][0] + ':' + timeTable[followingLessons[0].start_time - 1][1]}</Text>\n              </View>\n            </View>\n            <View className='study-timetable-following'>\n              <View className='study-timetable-following-wrapper'>\n                {\n                  followingLessons.map((item, index) => {\n                    return (\n                      index > 0 &&\n                      <View className='study-timetable-item' key={index}>\n                        <Text>{item.name}</Text>\n                        <Text>{timeTable[item.start_time - 1][0] + ':' + timeTable[item.start_time - 1][1]}</Text>\n                      </View>\n                    )\n                  })\n                }\n              </View>\n            </View>\n          </View>\n        </View>\n        <View className='study-reading'>\n          <View className='study-reading-top'>\n            <Text>我的阅读</Text>\n            <View className='study-reading-toBook'>查看书架></View>\n          </View>\n          <View className='study-reading-bookShelf'>\n            <View className='study-reading-books-xsbd'>\n              <Text className='study-reading-books-title'>新生必读</Text>\n              <View className='study-reading-books'>\n\n                <View className='study-reading-book'>\n                  <Image src={bookCover} className='study0-reading-book-cover' mode='widthFix'></Image>\n                  <View className='study-reading-book-right'>\n                    <Text className='study-reading-book-title'>学生手册</Text>\n                    <Text className='study-reading-book-description'>学生手册是一种学生手册</Text>\n                    <View className='study-reading-book-mark'>强烈推荐</View>\n                  </View>\n                </View>\n\n              </View>\n            </View>\n          </View>\n        </View>\n      </View>\n    </View>\n  )\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./study.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/study/study', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}