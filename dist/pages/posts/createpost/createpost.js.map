{"version":3,"file":"pages/posts/createpost/createpost.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAOA;AAPA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AAAA;AAaA;AAAA;AAbA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;ACrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://frontend/._src_pages_posts_createpost_createpost.tsx","webpack://frontend/./src/pages/posts/createpost/createpost.tsx?2006"],"sourcesContent":["import { useState, useRef } from 'react'\r\nimport Taro from '@tarojs/taro'\r\nimport { View, Text, Button, Input } from '@tarojs/components'\r\nimport PubSub from 'pubsub-js';\r\n\r\nimport useUser from '@/store/userInfo'\r\nimport useStore from '@/store/store'\r\nimport useRequest from '@/store/request'\r\n\r\nimport './createpost.css'\r\n\r\n\r\nexport default function createpost() {\r\n\r\n  const statusBarHeight = useStore((state) => state.statusBarHeight)\r\n  const [requestUrl, setRequestUrl] = useRequest((state) => [state.requestUrl, state.setRequestUrl])\r\n\r\n  const [tags, setTags] = useState<string[]>([\r\n    '校园日常',\r\n    '新生',\r\n    '求助',\r\n    '交友',\r\n    '考研',\r\n    '实习兼职',\r\n  ])\r\n\r\n  const [selectedTag, setSelectedTag] = useState<string>()\r\n  const [selectedImages, setSelectedImages] = useState<string[]>([])\r\n\r\n  const titleRef = useRef<HTMLInputElement>(null)\r\n  const contentRef = useRef<HTMLTextAreaElement>(null)\r\n  \r\n  // 处理话题选择逻辑\r\n  function handleTagSelect(tag: string) {\r\n    setSelectedTag(tag)\r\n    // if (selectedTags.includes(tag)) {\r\n    //   setSelectedTags(selectedTags.filter(t => t !== tag))\r\n    // } else if (selectedTags.length < 2) {\r\n    //   setSelectedTags([...selectedTags, tag])\r\n    // } else {\r\n    //   Taro.showToast({\r\n    //     title: '最多选择两项',\r\n    //     icon: 'none'\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  // 处理图片上传\r\n  async function handleUploadClick() {\r\n    // 选择图片\r\n    const res = Taro.chooseImage({\r\n      count: 9 - selectedImages.length, // 最多可以选择9张图片\r\n      sourceType: ['album', 'camera'],\r\n      sizeType: ['compressed'],\r\n      success: function (res) {\r\n        const tempFilePaths = res.tempFilePaths\r\n        setSelectedImages([...selectedImages, ...tempFilePaths])\r\n      }\r\n    })\r\n  }\r\n\r\n  // 处理图片删除\r\n  function handleDeleteClick(index: number) {\r\n    const newImages = [...selectedImages];\r\n    newImages.splice(index, 1);\r\n    setSelectedImages(newImages);\r\n  }\r\n\r\n  // 发布帖子\r\n  function handleSubmit() {    \r\n    if (titleRef.current && contentRef.current) {\r\n\r\n      if (titleRef.current.value.length < 1 || contentRef.current.value.length < 5) {\r\n        titleRef.current.placeholder = '请填写标题'\r\n        contentRef.current.placeholder = '请填写正文，不少于5个字'\r\n\r\n        Taro.showToast({\r\n          title: '检查标题或正文',\r\n          icon: 'error'\r\n        })\r\n        return\r\n      } else if (selectedTag === '' || selectedTag === undefined) {\r\n        Taro.showToast({\r\n          title: '请选择话题',\r\n          icon: 'error'\r\n        })\r\n\r\n        return\r\n      }\r\n\r\n      const title = titleRef.current.value\r\n      const content = contentRef.current.value\r\n      const tag = selectedTag\r\n      const images = selectedImages\r\n\r\n      Taro.request({\r\n        url: requestUrl + '/v1/posts/',\r\n        method: 'POST',\r\n        data: {\r\n              title: title,\r\n              content: content,\r\n              tag: tag\r\n        },\r\n        header: {\r\n          authorization: Taro.getStorageSync('token')\r\n        },\r\n\r\n        success: function (res) {\r\n          if ( res.statusCode === 201 ) {            \r\n            \r\n            Taro.showToast({\r\n              title: '发布成功',\r\n              icon: 'success'\r\n            });\r\n            // 1.5秒后返回，刷新首页\r\n            setTimeout(() => {\r\n              Taro.navigateBack();\r\n              PubSub.publish('refreshPage');\r\n            }, 1500);\r\n\r\n          } else {\r\n\r\n            Taro.showToast({\r\n              title: '发布失败',\r\n              icon: 'none'\r\n            });\r\n            \r\n          };\r\n\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View className='createpost-wrapper' style={{paddingTop: statusBarHeight + 'px'}}>\r\n      <View className='createpost-header'>\r\n        <View className='createpost-header-back' onClick={() => {Taro.navigateBack()}}></View>\r\n        <Text className='createpost-header-title'>发布</Text>\r\n      </View>\r\n      <form className='createpost-form'>\r\n        <Input ref={titleRef} className='createpost-title' type=\"text\" name='title' placeholder='填写标题会更受欢迎哦！' />\r\n        <textarea ref={contentRef} className='createpost-content' name=\"content\" placeholder='添加正文，不少于5个字'></textarea>\r\n        <View className='createpost-uploadPic-area'>\r\n          {\r\n            selectedImages.map((image, index) => (\r\n              <View key={index} className='createpost-selectedImage-wrapper'>\r\n                < img className='createpost-selectedImage' src={image} alt={`Selected-${index}`} />\r\n                <View className='createpost-delete-btn' onClick={() => handleDeleteClick(index)}>&times;</View>\r\n              </View>\r\n            ))\r\n          }\r\n          {selectedImages.length < 9 && <View className='createpost-uploadPic-btn' onClick={handleUploadClick}></View>}\r\n        </View>\r\n        <View className='createpost-postTags'>\r\n          <Text>选择话题*</Text>\r\n          <Text>话题决定了你发布的内容是否会你所期望的同学看到</Text>\r\n          <View className='createpost-tags'>\r\n            {\r\n              tags.map((item, index) => {\r\n                return (\r\n                  <View\r\n                    className='createpost-tag'\r\n                    key={index}\r\n                    onClick={() => handleTagSelect(item)}\r\n                    style={{\r\n                      backgroundColor: selectedTag === item ? '#4E6AFF' : '#efefef',\r\n                      color: selectedTag === item ? '#fff' : '#8b8b8b'\r\n                    }}\r\n                  >\r\n                    {item}\r\n                  </View>\r\n                )\r\n              })\r\n            }\r\n          </View>\r\n        </View>\r\n        <Button className='createpost-submit' formType='submit' onClick={handleSubmit}>发布</Button>\r\n      </form>\r\n    </View>\r\n  )\r\n}","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./createpost.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/posts/createpost/createpost', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}