{"version":3,"file":"pages/posts/createpost/createpost.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAOA;AAPA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://frontend/._src_pages_posts_createpost_createpost.tsx","webpack://frontend/./src/pages/posts/createpost/createpost.tsx?2006"],"sourcesContent":["import { useState, useRef } from 'react'\nimport Taro from '@tarojs/taro'\nimport { View, Text, Button, Input } from '@tarojs/components'\n\nimport useUser from '@/store/userInfo'\nimport useStore from '@/store/store'\nimport useRequest from '@/store/request'\n\n\nimport './createpost.css'\n\nexport default function createpost() {\n\n  const statusBarHeight = useStore((state) => state.statusBarHeight)\n  const [requestUrl, setRequestUrl] = useRequest((state) => [state.requestUrl, state.setRequestUrl])\n\n  const user_id = useUser((state) => state.user_id)\n\n\n  const [tags, setTags] = useState<string[]>([\n    '校园日常',\n    '新生',\n    '求助',\n    '交友',\n    '考研',\n    '实习兼职',\n  ])\n\n\n  const [selectedTag, setSelectedTag] = useState<string>()\n  const [selectedImages, setSelectedImages] = useState<string[]>([])\n\n  const titleRef = useRef<HTMLInputElement>(null)\n  const contentRef = useRef<HTMLTextAreaElement>(null)\n  \n  // 处理话题选择逻辑\n  function handleTagSelect(tag: string) {\n    setSelectedTag(tag)\n    // if (selectedTags.includes(tag)) {\n    //   setSelectedTags(selectedTags.filter(t => t !== tag))\n    // } else if (selectedTags.length < 2) {\n    //   setSelectedTags([...selectedTags, tag])\n    // } else {\n    //   Taro.showToast({\n    //     title: '最多选择两项',\n    //     icon: 'none'\n    //   })\n    // }\n  }\n\n  // 处理图片上传\n  function handleUploadClick() {\n    Taro.chooseImage({\n      count: 9 - selectedImages.length, // 最多可以选择9张图片\n      success: function (res) {\n        const tempFilePaths = res.tempFilePaths\n        setSelectedImages([...selectedImages, ...tempFilePaths])\n      }\n    })\n  }\n\n  // 处理图片删除\n  function handleDeleteClick(index: number) {\n    const newImages = [...selectedImages];\n    newImages.splice(index, 1);\n    setSelectedImages(newImages);\n  }\n\n  // 发布帖子\n  function handleSubmit() {    \n    if (titleRef.current && contentRef.current) {\n\n      if (titleRef.current.value.length < 1 || contentRef.current.value.length < 15) {\n        titleRef.current.placeholder = '请填写标题'\n        contentRef.current.placeholder = '请填写正文，不少于15个字'\n\n        Taro.showToast({\n          title: '检查标题或正文',\n          icon: 'error'\n        })\n        return\n      } else if (selectedTag === '' || selectedTag === undefined) {\n        Taro.showToast({\n          title: '请选择话题',\n          icon: 'error'\n        })\n\n        return\n      }\n\n      const title = titleRef.current.value\n      const content = contentRef.current.value\n      const tag = selectedTag\n      const images = selectedImages\n\n      Taro.request({\n        url: requestUrl + '/posts/createpost',\n        method: 'POST',\n        data: {\n              user_id: user_id,\n              title: title,\n              content: content,\n              post_tag: tag\n        },\n        header: {\n          'content-type': 'application/json'\n        },\n        success: function (res) {\n          console.log(res);\n          if (res.data.code === '200') {            \n            Taro.showToast({\n              title: '发布成功',\n              icon: 'success'\n            })\n            // 1.5秒后返回\n            setTimeout(() => {\n              Taro.navigateBack()\n            }, 1500)\n          } else {\n            Taro.showToast({\n              title: '发布失败',\n              icon: 'none'\n            })\n          }\n        }\n      })\n    }\n  }\n  \n\n  return (\n    <View className='createpost-wrapper' style={{paddingTop: statusBarHeight + 'px'}}>\n      <View className='createpost-header'>\n        <View className='createpost-header-back' onClick={() => {\n          Taro.navigateBack()\n        }}></View>\n        <Text className='createpost-header-title'>发布</Text>\n      </View>\n      <form className='createpost-form'>\n        <Input ref={titleRef} className='createpost-title' type=\"text\" name='title' placeholder='填写标题会更受欢迎哦！' />\n        <textarea ref={contentRef} className='createpost-content' name=\"content\" placeholder='添加正文，不少于15个字'></textarea>\n        <View className='createpost-uploadPic-area'>\n          {\n            selectedImages.map((image, index) => (\n              <View key={index} className='createpost-selectedImage-wrapper'>\n                < img className='createpost-selectedImage' src={image} alt={`Selected-${index}`} />\n                <View className='createpost-delete-btn' onClick={() => handleDeleteClick(index)}>&times;</View>\n              </View>\n            ))\n          }\n          {selectedImages.length < 9 && <View className='createpost-uploadPic-btn' onClick={handleUploadClick}></View>}\n        </View>\n        <View className='createpost-postTags'>\n          <Text>选择话题*（最多选择两项）</Text>\n          <Text>话题决定了你发布的内容是否会你所期望的同学看到</Text>\n          <View className='createpost-tags'>\n            {\n              tags.map((item, index) => {\n                return (\n                  <View\n                    className='createpost-tag'\n                    key={index}\n                    onClick={() => handleTagSelect(item)}\n                    style={{\n                      backgroundColor: selectedTag === item ? '#4E6AFF' : '#efefef',\n                      color: selectedTag === item ? '#fff' : '#8b8b8b'\n                    }}\n                  >\n                    {item}\n                  </View>\n                )\n              })\n            }\n          </View>\n        </View>\n        <Button className='createpost-submit' formType='submit' onClick={handleSubmit}>发布</Button>\n      </form>\n    </View>\n  )\n}","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./createpost.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/posts/createpost/createpost', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}