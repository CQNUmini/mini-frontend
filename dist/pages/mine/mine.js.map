{"version":3,"file":"pages/mine/mine.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AARA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAYA;;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;AAWA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAxEA;AAAA;AAAA;;AA0EA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAGA;;;;;;;;;;;;;AChMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://frontend/._src_pages_mine_mine.tsx","webpack://frontend/./src/pages/mine/mine.tsx?68db"],"sourcesContent":["import { View, Text, Image } from '@tarojs/components'\nimport { useLoad } from '@tarojs/taro'\nimport Taro from '@tarojs/taro'\n\nimport useUser from '../../store/userInfo';\nimport useRequest from '@/store/request';\nimport useAppInfo from '@/store/appInfo'; // 取 accessKeyId\n\nimport compressImage from '@/common/launchUtilities/compressImage';\n\nimport './mine.css'\n\nimport chatImg from '../../static/mine/chat.png'\nimport profileImg from '../../static/mine/profile.png'\nimport logoutImg from '../../static/mine/logout.png'\nimport loginImg from '../../static/mine/login.png'\nimport defaultAvatar from '../../static/mine/defaultAvatar.png'\n\nexport default function Mine() {\n\n  const [userInfo, setUserInfo] = useUser((state) => [state, state.setUserInfo]);\n  const requestUrl = useRequest((state) => state.requestUrl);\n  const accessKeyId = useAppInfo((state) => state.accessKey_id);\n\n  useLoad(() => {\n    if (!userInfo.isLogin) {\n      Taro.navigateTo({\n        url: '/pages/login/login'\n      })\n    }\n  })\n\n  const postInfo = {\n    postNum: 0,\n    collectedNum: 0,\n    recentView: 0\n  }\n\n  // 修改头像\n  const handleAvatarChange = async () => {\n    try {\n      // 选择图片\n      const res = await Taro.chooseImage({\n        count: 1,\n        sourceType: ['album', 'camera'],\n        sizeType: ['compressed'],\n      });\n\n      if (res.tempFilePaths && res.tempFilePaths[0]) {\n        const selectedImagePath = res.tempFilePaths[0]; // 图片路径\n        const token = Taro.getStorageSync('token'); // JWT token\n\n        // 获取 OSS 相关信息\n        const key = `avatar-${userInfo.id}-${Date.now()}`; // 上传头像的文件名\n        const policy = Taro.getStorageSync('policy'); // OSS policy\n        const ossAccessKeyId = accessKeyId; // 阿里云 RAM 用户 accessKeyId\n        const signature = Taro.getStorageSync('signature'); // OSS 签名\n\n        // 上传图片到阿里 OSS\n        const uploadRes = await Taro.uploadFile({\n          url: 'https://cqnu-user-avatars.oss-cn-chengdu.aliyuncs.com',\n          filePath: await compressImage(selectedImagePath), // 压缩图片\n          name: 'file', // 这里必须填 file\n          formData: {\n            key: key,\n            policy,\n            OSSAccessKeyId: ossAccessKeyId,\n            signature,\n          },\n        });\n\n        console.log(uploadRes);\n        \n\n        // 上传成功，将图片URL存入数据库\n        if (uploadRes.statusCode === 204) {\n          const avatarUrl = `https://cqnu-user-avatars.oss-cn-chengdu.aliyuncs.com/${key}`;\n          const updateAvatarRes = await Taro.request({\n            method: 'PATCH',\n            url: `${requestUrl}/v1/users//updateAvatar`,\n            header: {\n              Authorization: token\n            },\n            data: {\n              avatar: avatarUrl\n            },\n          });\n\n          if (updateAvatarRes.statusCode === 200) {\n            Taro.setStorageSync('avatar', avatarUrl); // 持久化 avatar\n            setUserInfo({ avatar: avatarUrl }) // 同步到 userInfo\n            \n            Taro.showToast({\n              title: '上传成功',\n              icon: 'success',\n              duration: 2000\n            });\n          };\n\n      } else {\n        Taro.showToast({\n          title: '上传失败',\n          icon: 'error',\n          duration: 2000\n        });\n      };\n    };\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// 登出\nconst handleLogOut = () => {\n  console.log(userInfo);\n\n  setUserInfo({\n    id: '',\n    openid: '',\n    student_id: '',\n    nick_name: '',\n    avatar: 'none',\n    user_level: 1,\n    user_exp: 0,\n    faculty: '',\n    major: '',\n    grade: '',\n  });\n  Taro.removeStorageSync('token');\n};\n\nreturn (\n  <View className='mine-wrapper'>\n    <View className='mine-content'>\n      <View className='mine-userInfo'>\n        <View className='mine-basicInfo'>\n          <Image src={userInfo.isLogin ? userInfo.avatar : defaultAvatar } className='mine-avatar' onClick={handleAvatarChange}></Image>\n          <Text className='mine-nickname'>{userInfo.isLogin ? userInfo.nick_name : '请登录'}</Text>\n          <Text className='mine-schoolID'>{userInfo.student_id}</Text>\n          <View className='mine-moreInfo'>\n            <View className='mine-moreInfo-item'>Lv.{userInfo.user_level}</View>\n            <View className='mine-moreInfo-item'>{userInfo.grade}</View>\n            <View className='mine-moreInfo-item'>{userInfo.faculty}</View>\n          </View>\n        </View>\n        <View className='mine-postInfo'>\n          <View className='mine-postInfo-item'>\n            <Text className='mine-postInfo-item-num'>{postInfo.postNum}</Text>\n            <Text className='mine-postInfo-item-text'>发帖</Text>\n          </View>\n          <View className='mine-postInfo-item'>\n            <Text className='mine-postInfo-item-num'>{postInfo.collectedNum}</Text>\n            <Text className='mine-postInfo-item-text'>收藏</Text>\n          </View>\n          <View className='mine-postInfo-item'>\n            <Text className='mine-postInfo-item-num'>{postInfo.recentView}</Text>\n            <Text className='mine-postInfo-item-text'>最近浏览</Text>\n          </View>\n        </View>\n      </View>\n      {userInfo.isLogin ?\n        <View className='mine-functions'>\n          <View className='mine-function mine-contactUs' onClick={\n            () => {\n              Taro.navigateTo({\n                url: '/pages/mine/contactUs/contactUs'\n              })\n            }\n          }>\n            <Image src={chatImg}></Image>\n            联系我们\n          </View>\n          <View className='mine-function mine-validation'>\n            <Image src={profileImg}></Image>\n            身份认证\n          </View>\n          <View className='mine-function mine-logout' onClick={handleLogOut}>\n            <Image src={logoutImg}></Image>\n            退出登录\n          </View>\n        </View> :\n        <View className='mine-functions'>\n          <View className='mine-function mine-login' onClick={userInfo.toLoginPage}>\n            <Image src={loginImg}></Image>\n            登录\n          </View>\n        </View>}\n    </View>\n    <View className='mine-topBackground'></View>\n  </View>\n)\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./mine.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/mine/mine', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}