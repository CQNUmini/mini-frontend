{"version":3,"file":"pages/mine/mine.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AARA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAYA;;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;AAWA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAxEA;AAAA;AAAA;;AA0EA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;AChMA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAJA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvBA;AAAA;AAAA;AAyBA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://frontend/._src_pages_mine_mine.tsx","webpack://frontend/._src_common_launchUtilities_compressImage.ts","webpack://frontend/./src/pages/mine/mine.tsx?68db"],"sourcesContent":["import { View, Text, Image } from '@tarojs/components'\r\nimport { useLoad } from '@tarojs/taro'\r\nimport Taro from '@tarojs/taro'\r\n\r\nimport useUser from '../../store/userInfo';\r\nimport useRequest from '@/store/request';\r\nimport useAppInfo from '@/store/appInfo'; // 取 accessKeyId\r\n\r\nimport compressImage from '@/common/launchUtilities/compressImage';\r\n\r\nimport './mine.css'\r\n\r\nimport chatImg from '../../static/mine/chat.png'\r\nimport profileImg from '../../static/mine/profile.png'\r\nimport logoutImg from '../../static/mine/logout.png'\r\nimport loginImg from '../../static/mine/login.png'\r\nimport defaultAvatar from '../../static/mine/defaultAvatar.png'\r\n\r\nexport default function Mine() {\r\n\r\n  const [userInfo, setUserInfo] = useUser((state) => [state, state.setUserInfo]);\r\n  const requestUrl = useRequest((state) => state.requestUrl);\r\n  const accessKeyId = useAppInfo((state) => state.accessKey_id);\r\n\r\n  useLoad(() => {\r\n    if (!userInfo.isLogin) {\r\n      Taro.navigateTo({\r\n        url: '/pages/login/login'\r\n      })\r\n    }\r\n  })\r\n\r\n  const postInfo = {\r\n    postNum: 0,\r\n    collectedNum: 0,\r\n    recentView: 0\r\n  }\r\n\r\n  // 修改头像\r\n  const handleAvatarChange = async () => {\r\n    try {\r\n      // 选择图片\r\n      const res = await Taro.chooseImage({\r\n        count: 1,\r\n        sourceType: ['album', 'camera'],\r\n        sizeType: ['compressed'],\r\n      });\r\n\r\n      if (res.tempFilePaths && res.tempFilePaths[0]) {\r\n        const selectedImagePath = res.tempFilePaths[0]; // 图片路径\r\n        const token = Taro.getStorageSync('token'); // JWT token\r\n\r\n        // 获取 OSS 相关信息\r\n        const key = `avatar-${userInfo.id}-${Date.now()}`; // 上传头像的文件名\r\n        const policy = Taro.getStorageSync('policy'); // OSS policy\r\n        const ossAccessKeyId = accessKeyId; // 阿里云 RAM 用户 accessKeyId\r\n        const signature = Taro.getStorageSync('signature'); // OSS 签名\r\n\r\n        // 上传图片到阿里 OSS\r\n        const uploadRes = await Taro.uploadFile({\r\n          url: 'https://cqnu-user-avatars.oss-cn-chengdu.aliyuncs.com',\r\n          filePath: await compressImage(selectedImagePath),\r\n          name: 'file', // 这里必须填 file\r\n          formData: {\r\n            key: key,\r\n            policy,\r\n            OSSAccessKeyId: ossAccessKeyId,\r\n            signature,\r\n          },\r\n        });\r\n\r\n        console.log(uploadRes);\r\n        \r\n\r\n        // 上传成功，将图片URL存入数据库\r\n        if (uploadRes.statusCode === 204) {\r\n          const avatarUrl = `https://cqnu-user-avatars.oss-cn-chengdu.aliyuncs.com/${key}`;\r\n          const updateAvatarRes = await Taro.request({\r\n            method: 'PATCH',\r\n            url: `${requestUrl}/v1/users//updateAvatar`,\r\n            header: {\r\n              Authorization: token\r\n            },\r\n            data: {\r\n              avatar: avatarUrl\r\n            },\r\n          });\r\n\r\n          if (updateAvatarRes.statusCode === 200) {\r\n            Taro.setStorageSync('avatar', avatarUrl); // 持久化 avatar\r\n            setUserInfo({ avatar: avatarUrl }) // 同步到 userInfo\r\n            \r\n            Taro.showToast({\r\n              title: '上传成功',\r\n              icon: 'success',\r\n              duration: 2000\r\n            });\r\n          };\r\n\r\n      } else {\r\n        Taro.showToast({\r\n          title: '上传失败',\r\n          icon: 'error',\r\n          duration: 2000\r\n        });\r\n      };\r\n    };\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n// 登出\r\nconst handleLogOut = () => {\r\n  console.log(userInfo);\r\n\r\n  setUserInfo({\r\n    id: '',\r\n    openid: '',\r\n    student_id: '',\r\n    nick_name: '',\r\n    avatar: 'none',\r\n    user_level: 1,\r\n    user_exp: 0,\r\n    faculty: '',\r\n    major: '',\r\n    grade: '',\r\n  });\r\n  Taro.removeStorageSync('token');\r\n};\r\n\r\nreturn (\r\n  <View className='mine-wrapper'>\r\n    <View className='mine-content'>\r\n      <View className='mine-userInfo'>\r\n        <View className='mine-basicInfo'>\r\n          <Image src={userInfo.isLogin ? userInfo.avatar : defaultAvatar } className='mine-avatar' onClick={handleAvatarChange}></Image>\r\n          <Text className='mine-nickname'>{userInfo.isLogin ? userInfo.nick_name : '请登录'}</Text>\r\n          <Text className='mine-schoolID'>{userInfo.student_id}</Text>\r\n          <View className='mine-moreInfo'>\r\n            <View className='mine-moreInfo-item'>Lv.{userInfo.user_level}</View>\r\n            <View className='mine-moreInfo-item'>{userInfo.grade}</View>\r\n            <View className='mine-moreInfo-item'>{userInfo.faculty}</View>\r\n          </View>\r\n        </View>\r\n        <View className='mine-postInfo'>\r\n          <View className='mine-postInfo-item'>\r\n            <Text className='mine-postInfo-item-num'>{postInfo.postNum}</Text>\r\n            <Text className='mine-postInfo-item-text'>发帖</Text>\r\n          </View>\r\n          <View className='mine-postInfo-item'>\r\n            <Text className='mine-postInfo-item-num'>{postInfo.collectedNum}</Text>\r\n            <Text className='mine-postInfo-item-text'>收藏</Text>\r\n          </View>\r\n          <View className='mine-postInfo-item'>\r\n            <Text className='mine-postInfo-item-num'>{postInfo.recentView}</Text>\r\n            <Text className='mine-postInfo-item-text'>最近浏览</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      {userInfo.isLogin ?\r\n        <View className='mine-functions'>\r\n          <View className='mine-function mine-contactUs' onClick={\r\n            () => {\r\n              Taro.navigateTo({\r\n                url: '/pages/mine/contactUs/contactUs'\r\n              })\r\n            }\r\n          }>\r\n            <Image src={chatImg}></Image>\r\n            联系我们\r\n          </View>\r\n          <View className='mine-function mine-validation'>\r\n            <Image src={profileImg}></Image>\r\n            身份认证\r\n          </View>\r\n          <View className='mine-function mine-logout' onClick={handleLogOut}>\r\n            <Image src={logoutImg}></Image>\r\n            退出登录\r\n          </View>\r\n        </View> :\r\n        <View className='mine-functions'>\r\n          <View className='mine-function mine-login' onClick={userInfo.toLoginPage}>\r\n            <Image src={loginImg}></Image>\r\n            登录\r\n          </View>\r\n        </View>}\r\n    </View>\r\n    <View className='mine-topBackground'></View>\r\n  </View>\r\n)\r\n}\r\n","import Taro from \"@tarojs/taro\";\r\n\r\n// quality: 压缩质量，范围0～100，数值越小，质量越低，压缩率越高（仅对jpg有效）。\r\nconst compressImage = async (filePath: string, quality: number = 80): Promise<string> => {\r\n    let imagePath = '';\r\n    try {\r\n        const imageRes = await Taro.compressImage({\r\n            src: filePath,\r\n            quality: quality,\r\n            compressedWidth: 300,\r\n        });\r\n\r\n        imagePath = imageRes.tempFilePath;\r\n\r\n        console.log(\"压缩后图片路径：\", imagePath);\r\n        \r\n\r\n    } catch (err) {\r\n        Taro.showToast({\r\n            title: \"图片处理失败\",\r\n            icon: \"error\",\r\n            duration: 2000,\r\n        });\r\n    }\r\n\r\n    return imagePath;\r\n}\r\n\r\nexport default compressImage;","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./mine.tsx\"\nvar config = {};\n\n\nvar inst = Page(createPageConfig(component, 'pages/mine/mine', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}