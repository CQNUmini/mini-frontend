{"version":3,"file":"pages/index/index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AANA;AAAA;AAQA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AAEA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AAEA;AACA;AAAA;AAAA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7MA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAMA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://frontend/._src_pages_index_index.tsx","webpack://frontend/._src_pages_index_Content_Content.tsx","webpack://frontend/._src_pages_index_Content_Hot_Hot.tsx","webpack://frontend/._src_pages_index_Content_Message_Message.tsx","webpack://frontend/._src_pages_index_Content_TagContent_TagContent.tsx","webpack://frontend/._src_pages_index_Header_Header.tsx","webpack://frontend/./src/pages/index/index.tsx?743a"],"sourcesContent":["import { View } from '@tarojs/components'\nimport { BrowserRouter } from 'react-router-dom'\nimport useStore from '@/store/store'\n\nimport Header from './Header/Header'\nimport Content from './Content/Content'\n\nimport './index.css'\n\nexport default function Index() {\n  \n  const statusBarHeight = useStore((state) => state.statusBarHeight)\n\n  return (\n    <BrowserRouter>\n      <View className='index-wrapper' style={{paddingTop: statusBarHeight + 'px'}}>\n        <Header />\n        <Content />\n      </View>\n    </BrowserRouter>\n  )\n}\n","import { Routes, Route } from \"react-router-dom\"\nimport { View } from \"@tarojs/components\"\n\nimport TagContent from \"./TagContent/TagContent\"\nimport Hot from './Hot/Hot'\nimport Message from \"./Message/Message\"\n\nexport default function Content() {\n\n    return (\n        <View className=\"index-content\">\n            <Routes>\n                <Route path=\"/pages/index/index\" element={<TagContent />} />\n                <Route path=\"/pages/index/hot\" element={<Hot />} />   \n                <Route path=\"/pages/index/message\" element={<Message />} />\n            </Routes>\n        </View>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { View, Text } from \"@tarojs/components\"\nimport Taro from \"@tarojs/taro\"\n\nimport useUser from \"@/store/userInfo\"\nimport useRequest from '@/store/request'\n\nimport './Hot.css'\n\ninterface hotTagtype {\n  post_id: string\n  title: string\n  hot_index: string\n}\n\nexport default function Hot() {\n\n  const [isLogin, toLoginPage] = useUser((state) => [state.isLogin, state.toLoginPage])\n  const [requestUrl, setRequestUrl] = useRequest((state) => [state.requestUrl, state.setRequestUrl])\n\n\n  const [hotTags, setHotTags] = useState<hotTagtype[]>([\n    // {post_id: '1', title: '热榜1', hot_index: '1'},\n    // {post_id: '2', title: '热榜2', hot_index: '2'},\n    // {post_id: '3', title: '热榜3', hot_index: '3'},\n    // {post_id: '4', title: '热榜4', hot_index: '4'},\n    // {post_id: '5', title: '热榜5', hot_index: '5'},\n  ])\n\n  const [hotTagColor, setHotTagColor] = useState<string[]>(['#ee5551', '#fc8623', '#e7ac67', '#ec9b3a'])\n\n  useEffect(() => {\n    // 获取热榜\n    Taro.request({\n      method: 'GET',\n      url: `${requestUrl}/v1/posts/getHotList`,\n      success: (res) => {\n        console.log(res);\n        const hotTags = res.data.data.posts.map(post => {\n          return {\n            post_id: post._id,\n            title: post.title,\n            hot_index: Math.round(post.heat)\n          }\n        });\n        setHotTags(hotTags);\n      }\n    })\n  }, [])\n\n  return (\n    <View className=\"hot-wrapper\">\n      <View className=\"hot-banner\">Banner</View>\n      <View className=\"hot-tags\">\n        {\n          hotTags.map((item, index) => {\n            return (\n              <View className=\"hot-tag\" key={item.post_id} onClick={\n                () => {\n\n                  if (!isLogin) {\n                    toLoginPage()\n\n                    return\n                  }\n\n                  Taro.navigateTo({\n                    url: '/pages/posts/postpage/postpage?' + `post_id=${item.post_id}`\n                  })\n                }\n              }>\n                <View className=\"hot-tag-left\">\n                  <View className=\"hot-tag-rank\" style={index < 3 ? { backgroundColor: hotTagColor[index] } : { color: hotTagColor[3] }}>{index + 1}</View>\n                  <View className=\"hot-tag-title\">{item.title}</View>\n                </View>\n                <View className=\"hot-tag-index\">{item.hot_index} 热度</View>\n              </View>\n            )\n          })\n        }\n      </View>\n    </View>\n  )\n}\n","import { useState } from \"react\"\nimport { View, Text } from \"@tarojs/components\"\n\nimport \"./Message.css\"\n\ninterface messageNumberType {\n    receivedLikes: string\n    reply: string\n    officialMessages: string\n}\n\nexport default function Message() {\n\n    const [messageNumber, setMessageNumber] = useState<messageNumberType>({\n        receivedLikes: '28',\n        reply: '23',\n        officialMessages: '34'\n    })\n\n    return (\n        <View className=\"message-wrapper\">\n            <View className=\"messages\">\n                <View className=\"message\">\n                    <Text className=\"message-name\">收到的赞</Text>\n                    <View className=\"message-number\">{messageNumber.receivedLikes}</View>\n                </View>\n                <View className=\"message\">\n                    <Text className=\"message-name\">评论回复</Text>\n                    <View className=\"message-number\">{messageNumber.reply}</View>\n                </View>\n                <View className=\"message\">\n                    <Text className=\"message-name\">官方消息</Text>\n                    <View className=\"message-number\">{messageNumber.officialMessages}</View>\n                </View>\n            </View>\n        </View>\n    )\n}\n","import Taro, { useLoad } from \"@tarojs/taro\";\nimport { View, Text, Image, ScrollView } from \"@tarojs/components\"\nimport { useState, useEffect, Fragment } from \"react\"\nimport PubSub from 'pubsub-js';\n\n// stores\nimport useUser from \"@/store/userInfo\"\nimport usePostData from \"@/store/postData\"\nimport useRequest from '@/store/request'\n\n// types\nimport { PostType } from \"@/types/postpage\";\n\nimport './TagContent.css'\n\nimport likeIcon from \"../../../../static/post/post-like-icon.png\"\nimport commentIcon from \"../../../../static/post/post-comment-icon.png\"\n\ninterface tagType {\n    tagName: string\n    isCurrent: boolean\n}\n\n\nexport default function TagContent() {\n    // store数据 ————————————————————————————————————————————————————————————————————————————————————————————————\n    const [user_id, isLogin, toLoginPage] = useUser((state) => [state.id, state.isLogin, state.toLoginPage]);\n\n    const [requestUrl, setRequestUrl] = useRequest((state) => [state.requestUrl, state.setRequestUrl]);\n\n    const postData = usePostData((state) => state) // 获取Tags\n\n    // 一些基本state——————————————————————————————————————————————————————————————————————————————————————\n    const [posts, setPosts] = useState<PostType[]>([]);\n\n    const [tags, setTags] = useState<tagType[]>([]);\n\n    // 阅读顺序\n    const [order, setOrder] = useState<'reply' | 'publish'>('reply');\n\n    // 将社区的基本数据渲染到页面上———————————————————————————————————————————————————————————————————————————\n    // 加载Tags\n    useEffect(() => {\n        let newTags = postData.tags.map((tag, index) => {\n            return {\n                tagName: tag,\n                isCurrent: index === 0 ? true : false // 第一个tag默认选中\n            }\n        })\n        setTags(newTags)\n    }, [postData]);\n\n    // 管理 url 参数变化，刷新页面\n    useEffect(() => {\n        if (tags.length === 0 || !order) return\n\n        const currentTag = tags.find((tag) => tag.isCurrent)?.tagName;\n\n        Taro.request({\n            method: 'GET',\n            url: `${requestUrl}/v1/posts/${currentTag}?sort=${order}`,\n            success(res) {\n                console.log(res.data);\n\n                setPosts(res.data.data.posts)\n            }\n        });\n    }, [tags, order]);\n\n    // 注册刷新页面事件\n    useEffect(() => {\n        let refreshPageToken = PubSub.subscribe('refreshPage', () => {\n            const currentTag = tags.find((tag) => tag.isCurrent)?.tagName;\n            // 刷新页面\n            Taro.request({\n                method: 'GET',\n                url: `${requestUrl}/v1/posts/${currentTag}?sort=${order}`,\n                success(res) {\n                    setPosts(res.data.data.posts)\n                }\n            });\n        });\n\n        return () => {\n            PubSub.unsubscribe(refreshPageToken);\n        };\n\n    }, [tags]);\n\n    // 页面功能——————————————————————————————————————————————————————————————————————————————————————————————\n\n    // 切换Tag\n    function handleTagClick(tagName: string) {\n        // 切换Tag显示\n        const newtags = tags.map((tag) => {\n            return {\n                ...tag,\n                isCurrent: tag.tagName === tagName\n            }\n        })\n        setTags(newtags)\n    };\n\n    // 切换查看顺序\n    function handleOrderSwitch(order: string): void {\n        setOrder(order as 'reply' | 'publish')\n    };\n\n    // 跳转到帖子\n    function enterPost(post_id: string) {\n\n        if (!isLogin) {\n            toLoginPage()\n\n            return\n        }\n\n        Taro.navigateTo({\n            url: '/pages/posts/postpage/postpage?' + `post_id=${post_id}`\n        })\n    };\n\n    // 下拉刷新\n    function handleScrollAndRefresh(event) {};\n \n    return (\n        <Fragment>\n            <View className=\"index-content-tags-createPost\" onClick={\n                () => {\n\n                    if (!isLogin) {\n                        toLoginPage()\n                    }\n\n                    Taro.navigateTo({\n                        url: '/pages/posts/createpost/createpost'\n                    })\n                }}\n            ></View>\n            <View className=\"index-content-tags\">\n                {\n                    tags.map((tag) => {\n                        return (\n                            <View\n                                className=\"index-content-tag\"\n                                style={tag.isCurrent ? { backgroundColor: '#4e6aff', color: '#fff' } : {}}\n                                onClick={() => handleTagClick(tag.tagName)}\n                            >\n                                {tag.tagName}\n                            </View>\n                        )\n                    })\n                }\n            </View>\n            <View className=\"index-tagContent\">\n                {\n                    tags.find((tag) => tag.isCurrent)?.tagName !== '热门' &&\n                    <View className=\"index-tagContent-order\">\n\n                        <Text>查看顺序</Text>\n                        <View className=\"index-content-orderSwitch\">\n                            <View className={`index-content-orderSwitch-item ${order === 'reply' && 'order-isCurrent'}`} onClick={() => handleOrderSwitch('reply')}>回复</View>\n                            <View className={`index-content-orderSwitch-item ${order === 'publish' && 'order-isCurrent'}`} onClick={() => handleOrderSwitch('publish')}>发布</View>\n                        </View>\n                    </View>\n\n                }\n                <View className=\"index-content-posts\">\n                    {\n                        posts.map((post) => {\n                            return (\n                                <View className=\"index-content-post\" key={post._id} onClick={() => enterPost(post._id)}>\n                                    <View className=\"post-texts\">\n                                        <Text className=\"post-title\">{post.title}</Text>\n                                        <Text className=\"post-description\">{post.content}</Text>\n                                    </View>\n                                    {post.pictures.length !== 0 && post.pictures.map((picture) => {\n                                        return (\n                                            <Image src={picture} className=\"post-picture\" mode=\"widthFix\" />\n                                        )\n                                    })}\n                                    <View className=\"post-info\">\n                                        <View className=\"post-info-user\">\n                                            <Image src={post.user.avatar} className=\"post-user-avatar\" />\n                                            <Text>{post.user.nick_name}</Text>\n                                        </View>\n                                        <View className=\"post-info-data\">\n                                            <View className=\"post-like\">\n                                                <Image src={likeIcon} />\n                                                <Text>{post.likes_num}</Text>\n                                            </View>\n                                            <View className=\"post-comment\">\n                                                <Image src={commentIcon}></Image>\n                                                <Text>{post.comments_num}</Text>\n                                            </View>\n                                        </View>\n                                    </View>\n                                </View>\n                            )\n                        })\n                    }\n                </View>\n            </View>\n        </Fragment>\n    )\n}\n","import { useState } from \"react\"\nimport Taro from \"@tarojs/taro\"\nimport { Link } from \"react-router-dom\"\nimport { View } from \"@tarojs/components\"\n\nimport useUser from \"@/store/userInfo\"\n\ninterface headerItemsType {\n  name: string\n  isCurrent: boolean,\n  id: string\n}\n\nexport default function header() {\n\n  const [isLogin, toLoginPage] = useUser((state) => [state.isLogin, state.toLoginPage])\n\n  const [headerItems, setHeaderItems] = useState<headerItemsType[]>([\n    { name: '话题', isCurrent: true, id: 'index' },\n    { name: '热榜', isCurrent: false, id: 'hot' },\n    { name: '消息', isCurrent: false, id: 'message' },\n  ])\n\n  function handleHeaderItemClick(id: string): void {\n\n    if (!isLogin && id === 'message') {\n      toLoginPage()\n\n      return\n    }\n\n    const newHeaderItems = headerItems.map((item) => {\n      return {\n        ...item,\n        isCurrent: item.id === id\n      }\n    })\n    setHeaderItems(newHeaderItems)\n  }\n\n  return (\n    <View className='index-header'>\n      <View className=\"index-header-items\">\n        {\n          headerItems.map((item) => {\n            if (item.id === 'message' && !isLogin) {\n              return (\n                <View className={`index-header-item ${item.isCurrent && 'index-header-isCurrent'}`} key={item.id} onClick={() => handleHeaderItemClick(item.id)}>{item.name}</View>\n              )\n            } else {\n              return (\n                <Link to={`pages/index/${item.id}`} className={`index-header-item ${item.isCurrent && 'index-header-isCurrent'}`} key={item.id} onClick={() => handleHeaderItemClick(item.id)}>{item.name}</Link>\n              )\n            }\n          })\n        }\n      </View>\n      <View className=\"index-header-search\" onClick={() => {\n        Taro.navigateTo({\n          url: '/pages/search/search'\n        })\n      }}\n      ></View>\n    </View>\n  )\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"首页\",\"navigationStyle\":\"custom\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}