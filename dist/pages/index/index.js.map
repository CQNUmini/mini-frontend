{"version":3,"file":"pages/index/index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AANA;AAAA;AAQA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AAEA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AAEA;AACA;AAAA;AAAA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1MA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAMA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://frontend/._src_pages_index_index.tsx","webpack://frontend/._src_pages_index_Content_Content.tsx","webpack://frontend/._src_pages_index_Content_Hot_Hot.tsx","webpack://frontend/._src_pages_index_Content_Message_Message.tsx","webpack://frontend/._src_pages_index_Content_TagContent_TagContent.tsx","webpack://frontend/._src_pages_index_Header_Header.tsx","webpack://frontend/./src/pages/index/index.tsx?743a"],"sourcesContent":["import { View } from '@tarojs/components'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport useStore from '@/store/store'\r\n\r\nimport Header from './Header/Header'\r\nimport Content from './Content/Content'\r\n\r\nimport './index.css'\r\n\r\nexport default function Index() {\r\n  \r\n  const statusBarHeight = useStore((state) => state.statusBarHeight)\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <View className='index-wrapper' style={{paddingTop: statusBarHeight + 'px'}}>\r\n        <Header />\r\n        <Content />\r\n      </View>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n","import { Routes, Route } from \"react-router-dom\"\r\nimport { View } from \"@tarojs/components\"\r\n\r\nimport TagContent from \"./TagContent/TagContent\"\r\nimport Hot from './Hot/Hot'\r\nimport Message from \"./Message/Message\"\r\n\r\nexport default function Content() {\r\n\r\n    return (\r\n        <View className=\"index-content\">\r\n            <Routes>\r\n                <Route path=\"/pages/index/index\" element={<TagContent />} />\r\n                <Route path=\"/pages/index/hot\" element={<Hot />} />   \r\n                <Route path=\"/pages/index/message\" element={<Message />} />\r\n            </Routes>\r\n        </View>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { View, Text } from \"@tarojs/components\"\r\nimport Taro from \"@tarojs/taro\"\r\n\r\nimport useUser from \"@/store/userInfo\"\r\nimport useRequest from '@/store/request'\r\n\r\nimport './Hot.css'\r\n\r\ninterface hotTagtype {\r\n  post_id: string\r\n  title: string\r\n  hot_index: string\r\n}\r\n\r\nexport default function Hot() {\r\n\r\n  const [isLogin, toLoginPage] = useUser((state) => [state.isLogin, state.toLoginPage])\r\n  const [requestUrl, setRequestUrl] = useRequest((state) => [state.requestUrl, state.setRequestUrl])\r\n\r\n\r\n  const [hotTags, setHotTags] = useState<hotTagtype[]>([\r\n    // {post_id: '1', title: '热榜1', hot_index: '1'},\r\n    // {post_id: '2', title: '热榜2', hot_index: '2'},\r\n    // {post_id: '3', title: '热榜3', hot_index: '3'},\r\n    // {post_id: '4', title: '热榜4', hot_index: '4'},\r\n    // {post_id: '5', title: '热榜5', hot_index: '5'},\r\n  ])\r\n\r\n  const [hotTagColor, setHotTagColor] = useState<string[]>(['#ee5551', '#fc8623', '#e7ac67', '#ec9b3a'])\r\n\r\n  useEffect(() => {\r\n    // 获取热榜\r\n    Taro.request({\r\n      method: 'GET',\r\n      url: `${requestUrl}/v1/posts/getHotList`,\r\n      success: (res) => {\r\n        console.log(res);\r\n        const hotTags = res.data.data.posts.map(post => {\r\n          return {\r\n            post_id: post._id,\r\n            title: post.title,\r\n            hot_index: Math.round(post.heat)\r\n          }\r\n        });\r\n        setHotTags(hotTags);\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <View className=\"hot-wrapper\">\r\n      <View className=\"hot-banner\">Banner</View>\r\n      <View className=\"hot-tags\">\r\n        {\r\n          hotTags.map((item, index) => {\r\n            return (\r\n              <View className=\"hot-tag\" key={item.post_id} onClick={\r\n                () => {\r\n\r\n                  if (!isLogin) {\r\n                    toLoginPage()\r\n\r\n                    return\r\n                  }\r\n\r\n                  Taro.navigateTo({\r\n                    url: '/pages/posts/postpage/postpage?' + `post_id=${item.post_id}`\r\n                  })\r\n                }\r\n              }>\r\n                <View className=\"hot-tag-left\">\r\n                  <View className=\"hot-tag-rank\" style={index < 3 ? { backgroundColor: hotTagColor[index] } : { color: hotTagColor[3] }}>{index + 1}</View>\r\n                  <View className=\"hot-tag-title\">{item.title}</View>\r\n                </View>\r\n                <View className=\"hot-tag-index\">{item.hot_index} 热度</View>\r\n              </View>\r\n            )\r\n          })\r\n        }\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { View, Text } from \"@tarojs/components\"\r\n\r\nimport \"./Message.css\"\r\n\r\ninterface messageNumberType {\r\n    receivedLikes: string\r\n    reply: string\r\n    officialMessages: string\r\n}\r\n\r\nexport default function Message() {\r\n\r\n    const [messageNumber, setMessageNumber] = useState<messageNumberType>({\r\n        receivedLikes: '28',\r\n        reply: '23',\r\n        officialMessages: '34'\r\n    })\r\n\r\n    return (\r\n        <View className=\"message-wrapper\">\r\n            <View className=\"messages\">\r\n                <View className=\"message\">\r\n                    <Text className=\"message-name\">收到的赞</Text>\r\n                    <View className=\"message-number\">{messageNumber.receivedLikes}</View>\r\n                </View>\r\n                <View className=\"message\">\r\n                    <Text className=\"message-name\">评论回复</Text>\r\n                    <View className=\"message-number\">{messageNumber.reply}</View>\r\n                </View>\r\n                <View className=\"message\">\r\n                    <Text className=\"message-name\">官方消息</Text>\r\n                    <View className=\"message-number\">{messageNumber.officialMessages}</View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n","import Taro, { useLoad } from \"@tarojs/taro\";\r\nimport { View, Text, Image } from \"@tarojs/components\"\r\nimport { useState, useEffect, Fragment } from \"react\"\r\nimport PubSub from 'pubsub-js';\r\n\r\n// stores\r\nimport useUser from \"@/store/userInfo\"\r\nimport usePostData from \"@/store/postData\"\r\nimport useRequest from '@/store/request'\r\n\r\n// types\r\nimport { PostType } from \"@/types/postpage\";\r\n\r\nimport './TagContent.css'\r\n\r\nimport likeIcon from \"../../../../static/post/post-like-icon.png\"\r\nimport commentIcon from \"../../../../static/post/post-comment-icon.png\"\r\n\r\ninterface tagType {\r\n    tagName: string\r\n    isCurrent: boolean\r\n}\r\n\r\n\r\nexport default function TagContent() {\r\n    // store数据 ————————————————————————————————————————————————————————————————————————————————————————————————\r\n    const [user_id, isLogin, toLoginPage] = useUser((state) => [state.id, state.isLogin, state.toLoginPage]);\r\n\r\n    const [requestUrl, setRequestUrl] = useRequest((state) => [state.requestUrl, state.setRequestUrl]);\r\n\r\n    const postData = usePostData((state) => state) // 获取Tags\r\n\r\n    // 一些基本state——————————————————————————————————————————————————————————————————————————————————————\r\n    const [posts, setPosts] = useState<PostType[]>([]);\r\n\r\n    const [tags, setTags] = useState<tagType[]>([]);\r\n\r\n    // 阅读顺序\r\n    const [order, setOrder] = useState<'reply' | 'publish'>('reply');\r\n\r\n    // 将社区的基本数据渲染到页面上————————————————————————————————————————————————————————————————————————————\r\n    // 加载Tags\r\n    useEffect(() => {\r\n        let newTags = postData.tags.map((tag, index) => {\r\n            return {\r\n                tagName: tag,\r\n                isCurrent: index === 0 ? true : false // 第一个tag默认选中\r\n            }\r\n        })\r\n        setTags(newTags)\r\n    }, [postData]);\r\n\r\n    // 管理 url 参数变化，刷新页面\r\n    useEffect(() => {\r\n        if (tags.length === 0 || !order) return\r\n\r\n        const currentTag = tags.find((tag) => tag.isCurrent)?.tagName;\r\n\r\n        Taro.request({\r\n            method: 'GET',\r\n            url: `${requestUrl}/v1/posts/${currentTag}?sort=${order}`,\r\n            success(res) {\r\n                console.log(res.data.data.posts);\r\n\r\n                setPosts(res.data.data.posts)\r\n            }\r\n        });\r\n    }, [tags, order]);\r\n\r\n    // 注册刷新页面事件\r\n    useEffect(() => {\r\n        let refreshPageToken = PubSub.subscribe('refreshPage', () => {\r\n            const currentTag = tags.find((tag) => tag.isCurrent)?.tagName;\r\n            // 刷新页面\r\n            Taro.request({\r\n                method: 'GET',\r\n                url: `${requestUrl}/v1/posts/${currentTag}?sort=${order}`,\r\n                success(res) {\r\n                    setPosts(res.data.data.posts)\r\n                }\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            PubSub.unsubscribe(refreshPageToken);\r\n        };\r\n\r\n    }, [tags]);\r\n\r\n    // 页面功能——————————————————————————————————————————————————————————————————————————————————————————————\r\n\r\n    // 切换Tag\r\n    function handleTagClick(tagName: string) {\r\n        // 切换Tag显示\r\n        const newtags = tags.map((tag) => {\r\n            return {\r\n                ...tag,\r\n                isCurrent: tag.tagName === tagName\r\n            }\r\n        })\r\n        setTags(newtags)\r\n    };\r\n\r\n    // 切换查看顺序\r\n    function handleOrderSwitch(order: string): void {\r\n        setOrder(order as 'reply' | 'publish')\r\n    }\r\n\r\n    // 跳转到帖子\r\n    function enterPost(post_id: string) {\r\n\r\n        if (!isLogin) {\r\n            toLoginPage()\r\n\r\n            return\r\n        }\r\n\r\n        Taro.navigateTo({\r\n            url: '/pages/posts/postpage/postpage?' + `post_id=${post_id}`\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <View className=\"index-content-tags-createPost\" onClick={\r\n                () => {\r\n\r\n                    if (!isLogin) {\r\n                        toLoginPage()\r\n                    }\r\n\r\n                    Taro.navigateTo({\r\n                        url: '/pages/posts/createpost/createpost'\r\n                    })\r\n                }}\r\n            ></View>\r\n            <View className=\"index-content-tags\">\r\n                {\r\n                    tags.map((tag) => {\r\n                        return (\r\n                            <View\r\n                                className=\"index-content-tag\"\r\n                                style={tag.isCurrent ? { backgroundColor: '#4e6aff', color: '#fff' } : {}}\r\n                                onClick={() => handleTagClick(tag.tagName)}\r\n                            >\r\n                                {tag.tagName}\r\n                            </View>\r\n                        )\r\n                    })\r\n                }\r\n            </View>\r\n            <View className=\"index-tagContent\">\r\n                {\r\n                    tags.find((tag) => tag.isCurrent)?.tagName !== '热门' &&\r\n                    <View className=\"index-tagContent-order\">\r\n\r\n                        <Text>查看顺序</Text>\r\n                        <View className=\"index-content-orderSwitch\">\r\n                            <View className={`index-content-orderSwitch-item ${order === 'reply' && 'order-isCurrent'}`} onClick={() => handleOrderSwitch('reply')}>回复</View>\r\n                            <View className={`index-content-orderSwitch-item ${order === 'publish' && 'order-isCurrent'}`} onClick={() => handleOrderSwitch('publish')}>发布</View>\r\n                        </View>\r\n                    </View>\r\n\r\n                }\r\n                <View className=\"index-content-posts\">\r\n                    {\r\n                        posts.map((post) => {\r\n                            return (\r\n                                <View className=\"index-content-post\" key={post._id} onClick={() => enterPost(post._id)}>\r\n                                    <View className=\"post-texts\">\r\n                                        <Text className=\"post-title\">{post.title}</Text>\r\n                                        <Text className=\"post-description\">{post.content}</Text>\r\n                                    </View>\r\n                                    {post.pictures.length !== 0 && post.pictures.map((picture) => {\r\n                                        return (\r\n                                            <Image src={picture} className=\"post-picture\" mode=\"widthFix\" />\r\n                                        )\r\n                                    })}\r\n                                    <View className=\"post-info\">\r\n                                        <View className=\"post-info-user\">\r\n                                            <Image src={post.user.avatar} className=\"post-user-avatar\" />\r\n                                            <Text>{post.user.nick_name}</Text>\r\n                                        </View>\r\n                                        <View className=\"post-info-data\">\r\n                                            <View className=\"post-like\">\r\n                                                <Image src={likeIcon} />\r\n                                                <Text>{post.likes_num}</Text>\r\n                                            </View>\r\n                                            <View className=\"post-comment\">\r\n                                                <Image src={commentIcon}></Image>\r\n                                                <Text>{post.comments_num}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                            )\r\n                        })\r\n                    }\r\n                </View>\r\n            </View>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport Taro from \"@tarojs/taro\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { View } from \"@tarojs/components\"\r\n\r\nimport useUser from \"@/store/userInfo\"\r\n\r\ninterface headerItemsType {\r\n  name: string\r\n  isCurrent: boolean,\r\n  id: string\r\n}\r\n\r\nexport default function header() {\r\n\r\n  const [isLogin, toLoginPage] = useUser((state) => [state.isLogin, state.toLoginPage])\r\n\r\n  const [headerItems, setHeaderItems] = useState<headerItemsType[]>([\r\n    { name: '话题', isCurrent: true, id: 'index' },\r\n    { name: '热榜', isCurrent: false, id: 'hot' },\r\n    { name: '消息', isCurrent: false, id: 'message' },\r\n  ])\r\n\r\n  function handleHeaderItemClick(id: string): void {\r\n\r\n    if (!isLogin && id === 'message') {\r\n      toLoginPage()\r\n\r\n      return\r\n    }\r\n\r\n    const newHeaderItems = headerItems.map((item) => {\r\n      return {\r\n        ...item,\r\n        isCurrent: item.id === id\r\n      }\r\n    })\r\n    setHeaderItems(newHeaderItems)\r\n  }\r\n\r\n  return (\r\n    <View className='index-header'>\r\n      <View className=\"index-header-items\">\r\n        {\r\n          headerItems.map((item) => {\r\n            if (item.id === 'message' && !isLogin) {\r\n              return (\r\n                <View className={`index-header-item ${item.isCurrent && 'index-header-isCurrent'}`} key={item.id} onClick={() => handleHeaderItemClick(item.id)}>{item.name}</View>\r\n              )\r\n            } else {\r\n              return (\r\n                <Link to={`pages/index/${item.id}`} className={`index-header-item ${item.isCurrent && 'index-header-isCurrent'}`} key={item.id} onClick={() => handleHeaderItemClick(item.id)}>{item.name}</Link>\r\n              )\r\n            }\r\n          })\r\n        }\r\n      </View>\r\n      <View className=\"index-header-search\" onClick={() => {\r\n        Taro.navigateTo({\r\n          url: '/pages/search/search'\r\n        })\r\n      }}\r\n      ></View>\r\n    </View>\r\n  )\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"首页\",\"navigationStyle\":\"custom\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}