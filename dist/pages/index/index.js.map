{"version":3,"file":"pages/index/index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AAAA;AAAA;AAQA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAQA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAoBA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AASA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpIA;AACA;AACA;AACA;AAAA;AAAA;AAQA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAMA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://frontend/._src_pages_index_index.tsx","webpack://frontend/._src_pages_index_Content_Content.tsx","webpack://frontend/._src_pages_index_Content_Hot_Hot.tsx","webpack://frontend/._src_pages_index_Content_Message_Message.tsx","webpack://frontend/._src_pages_index_Content_TagContent_TagContent.tsx","webpack://frontend/._src_pages_index_Header_Header.tsx","webpack://frontend/./src/pages/index/index.tsx?743a","webpack://frontend/._node_modules_@babel_runtime_helpers_esm_defineProperty.js","webpack://frontend/._node_modules_@babel_runtime_helpers_esm_objectSpread2.js","webpack://frontend/._node_modules_@babel_runtime_helpers_esm_toPrimitive.js","webpack://frontend/._node_modules_@babel_runtime_helpers_esm_toPropertyKey.js","webpack://frontend/._node_modules_@babel_runtime_helpers_esm_typeof.js"],"sourcesContent":["import { View } from '@tarojs/components'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport useStore from '@/store/store'\r\n\r\nimport Header from './Header/Header'\r\nimport Content from './Content/Content'\r\n\r\nimport './index.css'\r\n\r\nexport default function Index() {\r\n  \r\n  const statusBarHeight = useStore((state) => state.statusBarHeight)\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <View className='index-wrapper' style={{paddingTop: statusBarHeight + 'px'}}>\r\n        <Header />\r\n        <Content />\r\n      </View>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n","import { Routes, Route } from \"react-router-dom\"\r\nimport { View } from \"@tarojs/components\"\r\n\r\nimport TagContent from \"./TagContent/TagContent\"\r\nimport Hot from './Hot/Hot'\r\nimport Message from \"./Message/Message\"\r\n\r\nexport default function Content() {\r\n\r\n    return (\r\n        <View className=\"index-content\">\r\n            <Routes>\r\n                <Route path=\"/pages/index/index\" element={<TagContent />} />\r\n                <Route path=\"/pages/index/hot\" element={<Hot />} />   \r\n                <Route path=\"/pages/index/message\" element={<Message />} />\r\n            </Routes>\r\n        </View>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { View, Text } from \"@tarojs/components\"\r\n\r\nimport './Hot.css'\r\n\r\ninterface hotTagtype {\r\n  post_id: string\r\n  title: string\r\n  hot_index: string\r\n}\r\n\r\nexport default function Hot() {\r\n\r\n  const [hotTags, setHotTags] = useState<hotTagtype[]>([\r\n    {post_id: '1', title: '热榜1', hot_index: '1'},\r\n    {post_id: '2', title: '热榜2', hot_index: '2'},\r\n    {post_id: '3', title: '热榜3', hot_index: '3'},\r\n    {post_id: '4', title: '热榜4', hot_index: '4'},\r\n    {post_id: '5', title: '热榜5', hot_index: '5'},\r\n  ])\r\n\r\n  const [hotTagColor, setHotTagColor] = useState<string[]>(['#ee5551', '#fc8623', '#e7ac67', '#ec9b3a'])\r\n\r\n  return (\r\n    <View className=\"hot-wrapper\">\r\n      <View className=\"hot-banner\">Banner</View>\r\n      <View className=\"hot-tags\">\r\n        {\r\n          hotTags.map((item, index) => {\r\n            return (\r\n              <View className=\"hot-tag\" key={item.post_id}>\r\n                <View className=\"hot-tag-left\">\r\n                  <View className=\"hot-tag-rank\" style={index < 3 ? {backgroundColor: hotTagColor[index]} : {color: hotTagColor[3]}}>{index + 1}</View>\r\n                  <View className=\"hot-tag-title\">{item.title}</View>\r\n                </View>\r\n                <View className=\"hot-tag-index\">{item.hot_index}万热度</View>\r\n              </View>\r\n            )\r\n          })\r\n        }\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport { View, Text } from \"@tarojs/components\"\r\n\r\nimport \"./Message.css\"\r\n\r\ninterface messageNumberType {\r\n    receivedLikes: string\r\n    reply: string\r\n    officialMessages: string\r\n}\r\n\r\nexport default function Message() {\r\n\r\n    const [messageNumber, setMessageNumber] = useState<messageNumberType>({\r\n        receivedLikes: '28',\r\n        reply: '23',\r\n        officialMessages: '34'\r\n    })\r\n\r\n    return (\r\n        <View className=\"message-wrapper\">\r\n            <View className=\"messages\">\r\n                <View className=\"message\">\r\n                    <Text className=\"message-name\">收到的赞</Text>\r\n                    <View className=\"message-number\">{messageNumber.receivedLikes}</View>\r\n                </View>\r\n                <View className=\"message\">\r\n                    <Text className=\"message-name\">评论回复</Text>\r\n                    <View className=\"message-number\">{messageNumber.reply}</View>\r\n                </View>\r\n                <View className=\"message\">\r\n                    <Text className=\"message-name\">官方消息</Text>\r\n                    <View className=\"message-number\">{messageNumber.officialMessages}</View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n","import Taro from \"@tarojs/taro\"\r\nimport { View, Text, Image } from \"@tarojs/components\"\r\nimport { useState, Fragment } from \"react\"\r\n\r\nimport './TagContent.css'\r\n\r\nimport likeIcon from \"../../../../static/post/post-like-icon.png\"\r\nimport commentIcon from \"../../../../static/post/post-comment-icon.png\"\r\nimport { log } from \"console\"\r\n\r\ninterface postContentType {\r\n    title: string\r\n    description: string\r\n    picture?: string\r\n    userId: string\r\n    avatarUrl: string\r\n    nickname: string\r\n    likeNum: number\r\n    commentNum: number\r\n}\r\n\r\ninterface tagType {\r\n    tagName: string\r\n    isCurrent: boolean\r\n}\r\n\r\n\r\nexport default function TagContent() {\r\n\r\n    const [order, setOrder] = useState<'reply' | 'publish'>('reply')\r\n\r\n    const [posts, setPosts] = useState<postContentType[]>([\r\n        { title: '教务系统怎么选课？', description: '新生，不太懂教务系统怎么用...', picture: '#', userId: 'uuid-111', avatarUrl: '#', nickname: '这是一个昵称', likeNum: 0, commentNum: 0 },\r\n        { title: '宿舍水电怎么充值啊？', description: '如题', userId: 'uuid-111', avatarUrl: '', nickname: '这是一个昵称', likeNum: 0, commentNum: 0 },\r\n        { title: '如何评价原神这款游戏', description: '我不好评价，大伙们怎么看？', userId: 'uuid-111', avatarUrl: '#', nickname: '这是一个昵称', likeNum: 0, commentNum: 0 },\r\n    ])\r\n\r\n    const [tags, setTags] = useState<tagType[]>([\r\n        { tagName: '热门', isCurrent: true },\r\n        { tagName: '校园日常', isCurrent: false },\r\n        { tagName: '新生', isCurrent: false },\r\n        { tagName: '求助', isCurrent: false },\r\n        { tagName: '交友', isCurrent: false },\r\n        { tagName: '考研', isCurrent: false },\r\n    ])\r\n\r\n    function handleTagClick(tagName: string): void {\r\n        const newtags = tags.map((tag) => {\r\n            return {\r\n                ...tag,\r\n                isCurrent: tag.tagName === tagName\r\n            }\r\n        })\r\n        setTags(newtags)\r\n    }\r\n\r\n    function handleOrderSwitch(order: string): void {\r\n        setOrder(order as 'reply' | 'publish')\r\n    }\r\n\r\n    function enterPost() {\r\n        Taro.navigateTo({\r\n            url: '/pages/posts/postpage/postpage'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <View className=\"index-content-tags-createPost\" onClick={\r\n                () => {\r\n                    Taro.navigateTo({\r\n                        url: '/pages/posts/createpost/createpost'\r\n                    })\r\n                }}\r\n                ></View>\r\n            <View className=\"index-content-tags\">\r\n                {\r\n                    tags.map((tag) => {\r\n                        return (\r\n                            <View\r\n                                className=\"index-content-tag\"\r\n                                style={tag.isCurrent ? { backgroundColor: '#4e6aff', color: '#fff' } : {}}\r\n                                onClick={() => handleTagClick(tag.tagName)}\r\n                            >\r\n                                {tag.tagName}\r\n                            </View>\r\n                        )\r\n                    })\r\n                }\r\n            </View>\r\n            <View className=\"index-tagContent\">\r\n                <View className=\"index-tagContent-order\">\r\n                    <Text>查看顺序</Text>\r\n                    <View className=\"index-content-orderSwitch\">\r\n                        <View className={`index-content-orderSwitch-item ${order === 'reply' && 'order-isCurrent'}`} onClick={() => handleOrderSwitch('reply')}>回复</View>\r\n                        <View className={`index-content-orderSwitch-item ${order === 'publish' && 'order-isCurrent'}`} onClick={() => handleOrderSwitch('publish')}>发布</View>\r\n                    </View>\r\n                </View>\r\n                <View className=\"index-content-posts\">\r\n                    {\r\n                        posts.map((post) => {\r\n                            return (\r\n                                <View className=\"index-content-post\" key={post.userId} onClick={enterPost}>\r\n                                    <View className=\"post-texts\">\r\n                                        <Text className=\"post-title\">{post.title}</Text>\r\n                                        <Text className=\"post-description\">{post.description}</Text>\r\n                                    </View>\r\n                                    {post.picture && <Image src={post.picture} className=\"post-picture\" mode=\"widthFix\" />}\r\n                                    <View className=\"post-info\">\r\n                                        <View className=\"post-info-user\">\r\n                                            <Image src={post.avatarUrl} className=\"post-user-avatar\" />\r\n                                            <Text>{post.nickname}</Text>\r\n                                        </View>\r\n                                        <View className=\"post-info-data\">\r\n                                            <View className=\"post-like\">\r\n                                                <Image src={likeIcon} />\r\n                                                <Text>{post.likeNum}</Text>\r\n                                            </View>\r\n                                            <View className=\"post-comment\">\r\n                                                <Image src={commentIcon}></Image>\r\n                                                <Text>{post.commentNum}</Text>\r\n                                            </View>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                            )\r\n                        })\r\n                    }\r\n                </View>\r\n            </View>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport Taro from \"@tarojs/taro\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { View } from \"@tarojs/components\"\r\n\r\ninterface headerItemsType {\r\n  name: string\r\n  isCurrent: boolean,\r\n  id: string\r\n}\r\n\r\nexport default function header() {\r\n\r\n  const [headerItems, setHeaderItems] = useState<headerItemsType[]>([\r\n    {name: '话题', isCurrent: true, id: 'index'},\r\n    {name: '热榜', isCurrent: false, id: 'hot'},\r\n    {name: '消息', isCurrent: false, id: 'message'},\r\n  ])\r\n\r\n  function handleHeaderItemClick(id: string):void {\r\n    const newHeaderItems = headerItems.map((item) => {\r\n      return {\r\n        ...item,\r\n        isCurrent: item.id === id\r\n      }\r\n    })\r\n    setHeaderItems(newHeaderItems)\r\n  }\r\n  \r\n  return (\r\n    <View className='index-header'>\r\n      <View className=\"index-header-items\">\r\n        {\r\n          headerItems.map((item) => {\r\n            return (\r\n              <Link to={`pages/index/${item.id}`} className={`index-header-item ${item.isCurrent && 'index-header-isCurrent'}`} key={item.id} onClick={() => handleHeaderItemClick(item.id)}>{item.name}</Link>\r\n            )\r\n          })\r\n        }\r\n      </View>\r\n      <View className=\"index-header-search\" onClick={() => {\r\n        Taro.navigateTo({\r\n          url: '/pages/search/search'\r\n        })\r\n      }}\r\n        ></View>\r\n    </View>\r\n  )\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"首页\",\"navigationStyle\":\"custom\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}"],"names":[],"sourceRoot":""}